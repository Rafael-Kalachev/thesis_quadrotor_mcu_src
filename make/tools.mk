

##
# CC TOOLCHAIN
##


CC_TOOLCHAIN_PATH	:= 
CC_TOOLCAHIN_SEPARATOR	:= 
CC_TOOLCHAIN_PREFIX	:=arm-none-eabi-

CC	:= $(CC_TOOLCHAIN_PATH)$(CC_TOOLCAHIN_SEPARATOR)$(CC_TOOLCHAIN_PREFIX)gcc
#LD	:= $(CC_TOOLCHAIN_PATH)$(CC_TOOLCAHIN_SEPARATOR)$(CC_TOOLCHAIN_PREFIX)ld -v
LD	:= $(CC_TOOLCHAIN_PATH)$(CC_TOOLCAHIN_SEPARATOR)$(CC_TOOLCHAIN_PREFIX)gcc
AR	:= $(CC_TOOLCHAIN_PATH)$(CC_TOOLCAHIN_SEPARATOR)$(CC_TOOLCHAIN_PREFIX)ar
AS	:= $(CC_TOOLCHAIN_PATH)$(CC_TOOLCAHIN_SEPARATOR)$(CC_TOOLCHAIN_PREFIX)gcc
OBJCOPY	:= $(CC_TOOLCHAIN_PATH)$(CC_TOOLCAHIN_SEPARATOR)$(CC_TOOLCHAIN_PREFIX)objcopy

##
# PROGRAMMER TOOLS
##

PROGRAMMER_TOOLS_PATH	:= 
PROGRAMMER_TOOLS_SEPARATOR	:= 
PROGRAMMER_TOOLS_PREFIX	:=

PROGRAMMER	:= $(PROGRAMMER_TOOLS_PATH)$(PROGRAMMER_TOOLS_PREFIX)$(PROGRAMMER_TOOLS_SEPARATOR)st-flash

FLASH_CHIP	:= $(PROGRAMMER) --reset write 
ERASE_CHIP	:= $(PROGRAMMER) erase 
READ_CHIP	:= $(PROGRAMMER) read

##
# BOARD INFO TOOLS
##

BOARD_INFO_TOOLS_PATH	:= 
BOARD_INFO_TOOLS_SEPARATOR	:=
BOARD_INFO_TOOLS_PREFIX	:=

BOARD_INFO	:= $(BOARD_INFO_TOOLS_PATH)$(BOARD_INFO_TOOLS_SEPARATOR)$(BOARD_INFO_TOOLS_PREFIX)st-info


##
# UTILS
##

# Create direcotry provided
MKDIR	:= mkdir -p

# Log
#TODO make logging work
#LOG_SCRIPT_PATH	:= ./scripts
#LOG_SCRIPT_SEPARATOR := /
#LOG_SCRIPT	:= $(LOG_SCRIPT_PATH)$(LOG_SCRIPT_SEPARATOR)logger.sh

#LOG	:= $(LOG_SCRIPT) $(LOG_FLAGS)
